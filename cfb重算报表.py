# coding:utf-8
import time
import requests
from datetime import date, timedelta


def reset_report(customer, input_date, which_num, store_id):
    which_num = int(which_num)
    if not (which_num == 0 or which_num in [i for i in range(2, 13)]):
        print('请检查你的输入数字是否是0或是否在2到12区间？')
        return '请检查你的输入数字是否是0或是否在2到12区间？'
    if customer == 'DQ':
        customer_url = 'http://store.dairyqueen.com.cn'
    elif customer == 'PPJ':
        customer_url = 'http://store.papajohnshanghai.com'
    elif customer == 'xiaomian':
        customer_url = 'http://store.meet-xiaomian.com'
    elif customer == 'test':
        customer_url = 'http://test.dairyqueen.com.cn'
    else:
        print('请检查你的输入，现只支持输入DQ或PPJ')
        return '请检查你的输入，现只支持输入DQ或PPJ'
    start_date = input_date.split('-')
    format_start_date = date(*map(int, start_date))
    end_date = (format_start_date + timedelta(days=+1)).strftime("%Y-%m-%d")
    if which_num == 0:
        for i in range(2, 13):
            reset_url_all = '{}/api/v1/bi/task/sales/night?start_date={}&end_date={}&sales_types={}&store_ids={}&is_renew=true'.format(customer_url, input_date, end_date, i, store_id)
            print(reset_url_all)
            requests.get(reset_url_all)
            time.sleep(1)
    else:
        for i in range(which_num, which_num+1):
            reset_url = '{}/api/v1/bi/task/sales/night?start_date={}&end_date={}&sales_types={}&store_ids={}&is_renew=true'.format(customer_url, input_date, end_date, i, store_id)
            print(reset_url)
            requests.get(reset_url)
            time.sleep(1)

# customer_name = input("请输入要重算的客户。例如：DQ\n")
# start_date = input("请输入需要重算哪一天的报表和需要重算的门店id。例如：2020-03-05\n")
# which_num = input("请输入需要重算报表对应的数字。例如0代表全部，2代表门店销售报表\n")
# store_id = input("请输入门店id。例如：3850146176028377089\n")
# if start_date and store_id:
#     reset_report(customer_name, input_date=start_date, which_num=which_num, store_id=store_id)


# 2020-03-16
# 4280267818265481216


if __name__ == '__main__':
    # b = ['3850545525321367553', '3850545416969912321', '3850545521517133825', '3850545385751707649', '3850545390638071809', '3850545418546970625', '3850545425740201985', '3850545428302921729', '3850545429347303425', '3850545370849345537', '3850545520221093889', '3850545374942986241', '3850545377136607233', '3850545530488750081', '3850545461609889793', '3850545417506783233', '3850545452357255169', '3850545463329554433', '3850545403019657217', '3850545517398327297', '3850545526105702401', '3850545464482988033', '3850545526655156225', '3850545469323214849', '3850545468232695809', '3850545468811509761', '3850545527183638529', '3850545527796006913', '3850545470996742145', '3850545508359602177', '3850545491360088065', '3850545474389934081', '3850545476734550017', '3850545510720995329', '3850545480027078657', '3850545492895203329', '3850545482690461697', '3850545513434710017', '3850545532611067905', '3954140712948453377', '3875515699614973953', '3872976553730113537', '3911021500349546497', '3941843082629533697', '3972593177987579905', '3959219500346695681', '3982064030758350849', '3992146520778973185', '4034219595924205569', '4038132953863385089', '4048714009126342657', '4064200202663350273', '4080593179491520513', '4129820410132660225', '4245882877834694656', '4256999620548235264', '4245861399688908800', '4256998505475739648', '4267171267758526464', '4267172610288128000', '4297658927272722432', '4308901358639022080', '4365071196562194432', '4365068818026921985', '4414348575016779776', '4400603368345632768', '4408834106471776256', '4414356900047519744', '4423788241977638912', '4436407100953919488', '4446203393964277760', '3850545392206741505', '3850545395344080897', '3850545398129098753', '3850545401388072961', '3850545405154557953', '3850545407729860609', '3850545409957036033', '3850545411555065857']
    # b = ['3850545416969912321', '3850545521517133825', '3850545385038675969', '3850545385751707649', '3850545390638071809', '3850545418546970625', '3850545425740201985', '3850545429879980033', '3850545367724589057', '3850545370849345537', '3850545520221093889', '3850545377136607233', '3850545461609889793', '3850545434795704321', '3850545463329554433', '3850545403019657217', '3850545517398327297', '3850545526105702401', '3850545464482988033', '3850545526655156225', '3850545469323214849', '3850545468232695809', '3850545468811509761', '3850545527183638529', '3850545474389934081', '3850545475031662593', '3850545476734550017', '3850545510720995329', '3850545492895203329', '3850545492387692545', '3850545528324489217', '3850545515728994305', '3850545516848873473', '3850545532611067905', '3875773151342231553', '3872976553730113537', '3933749146726322177', '3888551931190181889', '3911021500349546497', '3941843082629533697', '3959219500346695681', '3982064030758350849', '3972595000825417729', '3996150870733701121', '4042886249799659521', '4048714009126342657', '4115371155137576961', '4107063283945390081', '4129820410132660225', '4129819878562877441', '4162430462989004801', '4245861399688908800', '4256998505475739648', '4261340227425013760', '4267171267758526464', '4267172610288128000', '4297658708128727040', '4308901358639022080', '4365068818026921985', '4400603368345632768', '4408834106471776256', '4436407100953919488', '4446203393964277760', '4468001516801785856', '4477704547898261504', '4481781817927565312', '4485398477884391424', '4488220156591374336', '3850545393255317505', '3850545395344080897', '3850545524591558657', '3850545397609005057', '3850545401388072961', '4485398477884391424', '3850545405154557953', '3850545406677090305', '3850545409957036033', '3850545411555065857']
    b = ['4048346706482503681']
    print(len(b))
    for i in b:
        reset_report("DQ", "2023-02-28", 0, i)
